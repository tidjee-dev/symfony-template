#_===========================================================================_#
#?                  ONLY USE THESE SERVICES IN DEVELOPMENT!                   #
#                                                                             #
#             !!! NEVER EXPOSE THESE SERVICES IN PRODUCTION! !!!              #
#_---------------------------------------------------------------------------_#
#  Info: Run the following command to create the .env.docker file.            #
#  Info: `cp MODEL.env .env.docker`                                           #
#  Info: Then update the values.                                              #
#_===========================================================================_#
services:
  #_===========================================================================_#
  #                                     APP                                     #
  #_===========================================================================_#
  app:
    build: .docker/php
    container_name: ${PROJECT_NAME}-app
    restart: unless-stopped
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./.docker/apache/default.conf:/etc/apache2/sites-enabled/000-default.conf
      - .:/var/www
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}"]
      interval: 5s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # depends_on: # (Un)comment depending on the database you want to use.
    #   - mysql
    #   - pgsql

  #_===========================================================================_#
  #                                  DATABASES                                  #
  #_---------------------------------------------------------------------------_#
  #  (Un)comment the service to enable the database you want to use.            #
  #                                                                             #
  #? Remember to:                                                               #
  #? - (Un)comment the volumes and tools related to the choosen database.       #
  #? - Update the .env.docker file with the correct values.                     #
  #_===========================================================================_#
  # mysql:
  #   image: mysql
  #   container_name: ${PROJECT_NAME}-mysql
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?'MYSQL_ROOT_PASSWORD is not set'}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE:?'MYSQL_DATABASE is not set'}
  #     MYSQL_USER: ${MYSQL_USER:?'MYSQL_USER is not set'}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD:?'MYSQL_PASSWORD is not set'}
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - .docker/mysql/mysql-init.sh:/docker-entrypoint-initdb.d/mysql-init.sh:ro
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 5
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # pgsql:
  #   image: postgres
  #   container_name: ${PROJECT_NAME}-pgsql
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:?'POSTGRES_DB is not set'}
  #     POSTGRES_USER: ${POSTGRES_USER:?'POSTGRES_USER is not set'}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?'POSTGRES_PASSWORD is not set'}
  #   volumes:
  #     - pgsql_data:/var/lib/postgresql/data
  #     - ./.docker/pgsql/pgsql-init.sh:/docker-entrypoint-initdb.d/pgsql-init.sh:ro
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 5
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  #_===========================================================================_#
  #                                    TOOLS                                    #
  #_---------------------------------------------------------------------------_#
  #  (Un)comment the service to enable the tools you want to use.               #
  #_===========================================================================_#
  # phpmyadmin: #? Uncomment if use of MySQL is enabled
  #   build: .docker/phpma
  #   container_name: ${PROJECT_NAME}-phpmyadmin
  #   restart: unless-stopped
  #   ports:
  #     - "${PHPMYADMIN_PORT}:80"
  #   environment:
  #     - PMA_HOST=mysql
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # pgadmin: #? Uncomment if use of PostgreSQL is enabled
  #   image: dpage/pgadmin4
  #   container_name: ${PROJECT_NAME}-pgadmin
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   ports:
  #     - "${PGADMIN_PORT}:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # mailpit:
  #   image: axllent/mailpit
  #   container_name: ${PROJECT_NAME}-mailpit
  #   restart: unless-stopped
  #   ports:
  #     - "${MAILPIT_SMTP_PORT:?'MAILPIT_SMTP_PORT is not set'}:1025"
  #     - "${MAILPIT_HTTP_PORT:?'MAILPIT_HTTP_PORT is not set'}:8025"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
#_=============================================================================_#
#                                    VOLUMES                                    #
#_-----------------------------------------------------------------------------_#
#  (Un)comment the volume related to the used database.                         #
#_=============================================================================_#
# volumes:
#   mysql_data: #? Uncomment if use of MySQL is enabled
#     driver: local
#   pgsql_data: #? Uncomment if use of PostgreSQL is enabled
#     driver: local
#   pgadmin_data: #? Uncomment if use of PostgreSQL is enabled
#     driver: local
